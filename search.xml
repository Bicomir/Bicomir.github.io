<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[markdown入门_2]]></title>
    <url>%2F2018%2F05%2F08%2Fmarkdown%E5%85%A5%E9%97%A8-2%2F</url>
    <content type="text"><![CDATA[This is my test Blog.]]></content>
  </entry>
  <entry>
    <title><![CDATA[markdown入门_1]]></title>
    <url>%2F2018%2F05%2F08%2Fmarkdown%E5%85%A5%E9%97%A8-1%2F</url>
    <content type="text"><![CDATA[Markdown基本语法介绍 参考链接:https://www.jianshu.com/p/b03a8d7b1719 简明教程：https://ouweiya.gitbooks.io/markdown/ 有道云MarkDown教程：http://note.youdao.com/iyoudao/?p=2411 W3cShcool:https://www.w3cschool.cn/lme/t13p1sri.html 1.标题代码注：#后面保持空格 12345678910# h1## h2### h3#### h4##### h5###### h6####### h7 // 错误代码######## h8 // 错误代码######### h9 // 错误代码########## h10 // 错误代码 演示h1h2h3h4h5h6####### h7 ######## h8 ######### h9 ########## h10 2.分级标题代码 注：=-最少可以只写一个，兼容性一般 1234一级标题======================二级标题--------------------- 演示一级标题二级标题3.Toc代码 注：根据标题生成目录 1[TOC] 演示[TOC] 引用行内标记++代码块++插入链接插入图片插入图片带有链接序表任务列表表情表格支持内嵌CSS样式4.引用代码1（单行式）1&gt;hello world! 演示 hello world 代码2（多行式）123&gt; hello world!hello world!hello world! 或者123&gt;hello world!&gt;hello world!&gt;hello world! 演示 hello world!hello world!hello world! 代码3（多层嵌套）123&gt; aaaaaaaa&gt;&gt; bbbbbbbb&gt;&gt;&gt; cccccccc 演示 aaaaaaaa bbbbbbbb ccccccccc 5.行内标记 注：用 ` 标记代码块将变成一行 代码1标记之外`hello world`标记之外 演示标记之外hello world标记之外 错误代码 注：不同平台错误略有差异1234567 标记之外 ` &lt; div&gt; &lt; div&gt;&lt;/div&gt; &lt; div&gt;&lt;/div&gt; &lt; div&gt;&lt;/div&gt;&lt; /div&gt;`标记之外 演示 标记之外 &lt; div&gt; &lt; div&gt;&lt;/div&gt; &lt; div&gt;&lt;/div&gt; &lt; div&gt;&lt;/div&gt; &lt; /div&gt; 标记之外 6.代码块 注：与上行距离一空行 **代码1(123&gt; 注：用```生成块 #### 演示 123**代码2(Tab)**&gt; 注：Tab缩进 #### 演示 我是文字…… &lt;div&gt; &lt;div&gt;&lt;/div&gt; &lt;div&gt;&lt;/div&gt; &lt;div&gt;&lt;/div&gt; &lt;/div&gt; 123456789**代码3(自定义语法)**&gt; 注：根据不同的语言配置不同的代码颜色 ```javascriptvar num = 0;for (var i = 0; i &lt; 5; i++) &#123; num+=i;&#125;console.log(num); 7.插入链接代码1(内链式) 注：{:target=”_blank”}跳转方式兼容性一般 ，多数第三方平台不支持跳转 1[百度1](http://www.baidu.com/&quot; 百度一下&quot;)&#123;:target=&quot;_blank&quot;&#125; 演示百度1 代码2(引用式)12[百度2][2]&#123;:target=&quot;_blank&quot;&#125;[2]: http://www.baidu.com/ &quot;百度二下&quot; 演示百度2 8.插入图片代码1(内链式)1![](./01.png &apos;描述&apos;) 演示 代码2(引用式)12![name][01][01]: ./01.png &apos;描述&apos; 演示![name][01] [01]: C:/Users/wjq/Desktop/markdown/images/01.png ‘描述’ 9.插入图片带有链接代码1234[![](./01.png &apos;百度&apos;)](http://www.baidu.com)&#123;:target=&quot;_blank&quot;&#125; // 内链式[![](./01.png &apos;百度&apos;)][5]&#123;:target=&quot;_blank&quot;&#125; // 引用式[5]: http://www.baidu.com 演示内链式 引用式{:target=”_blank”} 10.视频插入 注: Markdown语法是不支持直接插入视频的12普遍的做法是 插入HTML的 iframe 框架，通过网站自带的分享功能获取，如果没有可以尝试第二种方法第二是伪造播放界面，实质是插入视频图片，然后通过点击跳转到相关页面 代码1 注: 多数第三方平台不支持插入视频1&lt;iframe height=498 width=510 src=&apos;http://player.youku.com/embed/XMjgzNzM0NTYxNg==&apos; frameborder=0 &apos;allowfullscreen&apos;&gt;&lt;/iframe&gt; 代码21[![](./youku2.png)](http://v.youku.com/v_show/id_XMjgzNzM0NTYxNg==.html?spm=a2htv.20009910.contentHolderUnit2.A&amp;from=y1.3-tv-grid-1007-9910.86804.1-2#paction)&#123;:target=&quot;_blank&quot;&#125; 11.序表代码1(有序) 1231. one2. two3. three 演示 one two three 代码2(无序) 123* one* two* three 演示 one two three 代码3(序表嵌套)1234561. one 1. one-1 2. two-22. two * two-1 * two-2 演示 one one-1 two-2 two two-1 two-2 代码4(序表嵌套代码块) 注: 换行+两个Tab12* one var a = 10; //与上行保持空行并递归缩进 演示 one var a = 10; //与上行保持空行并递归缩进 12.任务列表 注：兼容性一般 要隔开一行12345这是文字……- [x] 选项一- [ ] 选项二 - [ ] [选项3] 演示 选项一 选项二 [ ] [选项3] 13.表情 注：兼容一般 14.表格 注：: 代表对齐方式 , : 与 | 之间不要有空格，否则对齐会有些不兼容 代码1 1234| a | b | c | |:-------:|:------------- | ----------:| | 居中 | 左对齐 | 右对齐 ||=========|===============|============| 演示 a b c 居中 左对齐 右对齐 ========= =============== ============ 代码2(简约写法)1234a | b | c :-:|:- |-: 居中 | 左对齐 | 右对齐 ============|=================|============= 演示 a b c 居中 左对齐 右对齐 ============ ================= ============= 代码3(特殊表格) 注: 一般对合并单元格，以及其他特殊格式表格，markdown 是无能为力的 所以常规的做法是使用HTML标签，但是这样的编写效率极低。 但是有了这款工具的话，所有问题都迎刃而解. 在线生成HTML代码 Tables Generator (国外的站) 15.支持内嵌的CSS样式 代码1&lt;p style=&quot;color: #AD5D0F;font-size: 30px; font-family: &apos;宋体&apos;;&quot;&gt;内联样式&lt;/p&gt; 演示内联样式 16.语义标记 描述 效果 代码 斜体 斜体 *斜体* 斜体 斜体 _斜体_ 加粗 加粗 **加粗** 加粗+斜体 加粗+斜体 ***加粗+斜体*** 加粗+斜体 加粗+斜体 **_加粗+斜体_** 删除线 删除线 ~~删除线~~ 17.语义标签 描述 效果 代码 斜体 斜体 &lt;i&gt;斜体&lt;/i&gt; 加粗 加粗 &lt;b&gt;加粗&lt;/b&gt; 强调 强调 &lt;em&gt;强调&lt;/em&gt; 上标 Za Z&lt;sup&gt;a&lt;/sup&gt; 下标 Za Z&lt;sub&gt;a&lt;/sub&gt; 键盘文本 Ctrl &lt;kbd&gt;Ctrl&lt;/kbd&gt; 换行 18.格式化文本 保持输入排版格式不变 代码 12345 &lt;pre&gt;hello world hi hello world &lt;/pre&gt; 演示 hello world hi hello world 错误解决方法 注: 标签内部添加空格 或者 直接使用12345678910111213141516**代码1(插入空格)** **演示**&lt;pre&gt; &lt; div&gt; &lt; div&gt;&lt; /div&gt; &lt; div&gt;&lt; /div&gt; &lt; div&gt;&lt; /div&gt; &lt; /div&gt;&lt;/pre&gt;#### 19.公式 &#123;#1&#125; &gt; 注: 1个$左对齐，2个居中 **代码** $$ x \href{why-equal.html}{=} y^2 + 1 $$$ x = {-b \pm \sqrt{b^2-4ac} \over 2a}. $123456789101112**演示**$$ x \href&#123;why-equal.html&#125;&#123;=&#125; y^2 + 1 $$ $ x = &#123;-b \pm \sqrt&#123;b^2-4ac&#125; \over 2a&#125;. $#### 20.分隔符 &gt; 注: 最少三个 --- 或 ***或 * * * **代码** * 1234567**演示** ***---* * *#### 21.脚注**代码** Markdown[^1][^1]: Markdown是一种纯文本标记语言 //在文章最后面显示脚注 1234567891011**演示** Markdown[^1] [^1]: Markdown是一种纯文本标记语言#### 22.锚点**代码** &gt; 注: 只有标题支持锚点， 跳转目录方括号后 保持空格#### 23.定义型列表&gt; 注: 解释型定义 Markdown: 轻量级文本标记语言，可以转换成html，pdf等格式 // 开头一个: + Tab 或 四个空格 代码块定义: 代码块定义…… var a = 10; // 保持空一行与 递进缩进123456789101112**演示** Markdown : 轻量级文本标记语言，可以转换成html，pdf等格式 // 开头一个`:` + `Tab` 或 四个空格代码块定义: 代码块定义…… var a = 10; #### 24.自动邮箱链接 **代码** &#120;&#x78;&#120;&#64;&#111;&#117;&#x74;&#x6c;&#x6f;&#111;&#107;&#x2e;&#x63;&#111;&#109;123456**演示** &lt;xxx@outlook.com&gt; #### 25.流程图**代码** flow // 流程st=&gt;start: 开始|past:&gt; http://www.baidu.com // 开始 e=&gt;end: 结束 // 结束c1=&gt;condition: 条件1:&gt;http://www.baidu.com[_parent]//判断条件 c2=&gt;condition: 条件2 // 判断条件c3=&gt;condition: 条件3 // 判断条件io=&gt;inputoutput: 输出 // 输出//—————-以上为定义参数————————- //—————-以下为连接参数————————-// 开始-&gt;判断条件1为no-&gt;判断条件2为no-&gt;判断条件3为no-&gt;输出-&gt;结束st-&gt;c1(yes,right)-&gt;c2(yes,right)-&gt;c3(yes,right)-&gt;io-&gt;e c1(no)-&gt;e // 条件1不满足-&gt;结束c2(no)-&gt;e // 条件2不满足-&gt;结束c3(no)-&gt;e // 条件3不满足-&gt;结束 12#### 26.时序图**代码** sequenceA-&gt;&gt;B: 你好Note left of A: 我在左边 // 注释方向，只有左右，没有上下Note right of B: 我在右边B–&gt;A: 很高兴认识你``` 27.生成侧边栏扩展代码 注: 生成侧边栏一般是插入JS，再就是模板,总体来说，很是麻烦，效果一般，不作详解。 作者仓库：i5ting_ztree_tocEND]]></content>
      <tags>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Markdown入门_0]]></title>
    <url>%2F2018%2F05%2F06%2FMarkdown%E5%85%A5%E9%97%A8-0%2F</url>
    <content type="text"><![CDATA[##Markdown——入门指南(补充版) ####导语： Markdown 是一种轻量级的「标记语言」，它的优点很多，目前也被越来越多的写作爱好者，撰稿者广泛使用。看到这里请不要被「标记」、「语言」所迷惑，Markdown 的语法十分简单。常用的标记符号也不超过十个，这种相对于更为复杂的 HTML 标记语言来说，Markdown 可谓是十分轻量的，学习成本也不需要太多，且一旦熟悉这种语法规则，会有一劳永逸的效果。 ###一，认识 Markdown在刚才的导语里提到，Markdown 是一种用来写作的轻量级「标记语言」，它用简洁的语法代替排版，而不像一般我们用的字处理软件 Word 或 Pages 有大量的排版、字体设置。它使我们专心于码字，用「标记」语法，来代替常见的排版格式。例如此文从内容到格式，甚至插图，键盘就可以通通搞定了。目前来看，支持 Markdown 语法的编辑器有很多，包括很多网站（例如简书）也支持了 Markdown 的文字录入。Markdown 从写作到完成，导出格式随心所欲，你可以导出 HTML 格式的文件用来网站发布，也可以十分方便的导出 PDF 格式，这种格式写出的简历更能得到 HR 的好感。甚至可以利用 CloudApp 这种云服务工具直接上传至网页用来分享你的文章，全球最大的轻博客平台 Tumblr，也支持 Mou 这类 Markdown 工具的直接上传。 ###Markdown 官方文档这里可以看到官方的 Markdown 语法规则文档，当然，后文我也会用自己的方式阐述这些语法的具体用法。 创始人 John Gruber 的 Markdown 语法说明Markdown 中文版语法说明 ###使用 Markdown 的优点专注你的文字内容而不是排版样式，安心写作。轻松的导出 HTML、PDF 和本身的 .md 文件。纯文本内容，兼容所有的文本编辑器与字处理软件。随时修改你的文章版本，不必像字处理软件生成若干文件版本导致混乱。可读、直观、学习成本低。 ###使用 Markdown 的误区We believe that writing is about content, about what you want to say – not about fancy formatting.我们坚信写作写的是内容，所思所想，而不是花样格式。— Ulysses for MacMarkdown 旨在简洁、高效，也由于 Markdown 的易读易写，人们用不同的编程语言实现了多个版本的解析器和生成器，这就导致了目前不同的 Markdown 工具集成了不同的功能（基础功能大致相同），例如流程图与时序图，复杂表格与复杂公式的呈现，虽然功能的丰富并没有什么本质的缺点，但终归有些背离初衷，何况在编写的过程中很费神，不如使用专业的工具撰写来的更有效率，所以如果你需实现复杂功能，专业的图形界面工具会更加方便。当然，如果你对折腾这些不同客户端对 Markdown 的定制所带来高阶功能感到愉悦的话，那也是无可厚非的。 ###我该用什么工具？Mou for MacMou for Mac在 Mac OS X 上，我强烈建议你用 Mou 这款免费且十分好用的 Markdown 编辑器，它支持实时预览，既左边是你编辑 Markdown 语言，右边会实时的生成预览效果。不仅如此，Mou 还有一些有趣的偏好设置（Preference），例如主题（Themes）与样式（CSS），它们可以配置出定制化的文本编辑效果与导出效果，如果你对自带的主题与样式不满意还可以到 GitHub 上搜索其它爱好者为 Mou 编写的更多主题样式，导入的方式可以在偏好设置的 Themes 或 CSS 选项中 选择 reload。 如果你从事文字工作，我强烈建议你购买 Ulysses for Mac，这款软件入围了苹果 Mac App Store 的 The Best of 2013。它支持更多的写作格式、多文档的支持。Mou，iA writer 这些软件都是基于单文档的管理方式，而 Ulysses 支持 Folder、Filter 的管理，一个 Folder 里面可以创建多个 Sheet，Sheet 之间也可以进行 Combine 处理。 Mac 上一些 Markdown 编辑器Mac 上一些 Markdown 编辑器由于笔者很少接触 Windows，Windows 下的 Markdown 没有过多涉猎，经朋友介绍，有两款还算不错，一款叫做 MarkdownPad ，另一款叫做 MarkPad。 iOS 端很多 app 早已经支持了 Markdown 录入，例如 Drafts，Day One，iA writer 等，另外 Ulysses for iPad 现在已经上架，可以说是 iOS 平台最好的编辑器了。 在 Web端，我强烈推荐简书这款产品，上面有无数热爱文字的人在不停的创造，分享。在 Web 端使用 Markdown 没有比简书更舒服的地方了，同样支持左右两栏的实时预览，字体优雅，简洁。 简书的编辑预览模式简书的编辑预览模式 ###二，Markdown 语法的简要规则 标题是每篇文章都需要也是最常用的格式，在 Markdown 中，如果一段文字被定义为标题，只要在这段文字前加 # 号即可。 一级标题二级标题三级标题以此类推，总共六级标题，建议在井号后加一个空格，这是最标准的 Markdown 语法。补充：除了在前段加上“＃”还可以是在底部加上“＝” 一级标题###列表熟悉 HTML 的同学肯定知道有序列表与无序列表的区别，在 Markdown 下，列表的显示只需要在文字前加上 - 或 * 即可变为无序列表，有序列表则直接在文字前加1. 2. 3. 符号要和文字之间加上一个字符的空格。无序列表与有序列表 #####无序列表： 1 2 3 补充：无序列表出了加上“＊”还可以是“＋”或者“－”无序列表的第二个示例(建议：一个文档中只是用一种无序列表的表示方式） 1 2 3 #####有序列表： 1 2 3 ###引用如果你需要引用一小段别处的句子，那么就要用引用的格式。 例如这样只需要在文本前加入 &gt; 这种尖括号（大于号）即可 这里是引用 ###图片与链接插入链接与插入图片的语法很像，区别在一个 !号 图片为： 链接为：文字 插入图片的地址需要图床，这里推荐围脖图床修复计划 与 CloudApp 的服务，生成URL地址即可。 ###粗体与斜体Markdown 的粗体和斜体也非常简单，用两个 包含一段文本就是粗体的语法，用一个 包含一段文本就是斜体的语法。 斜体示例：这里是斜体 ####补充：当然也可以加下划线“_” 斜体示例：这里也是斜体 ####补充：当然从斜体我们也能思考得出加粗的另一种示例 加粗示例：这里是加粗加粗示例：这里是加粗 ###表格表格是我觉得 Markdown 比较累人的地方，例子如下： Tables Are Cool col 3 is right-aligned $1600 col 2 is centered $12 zebra stripes are neat $1 这种语法生成的表格如下： Tables Are Cool col 3 is right-aligned $1600col 2 is centered $12zebra stripes are neat $1 ###代码框如果你是个程序猿，需要在文章里优雅的引用代码框，在 Markdown下实现也非常简单，只需要用两个 ` 把中间的代码包裹起来。图例： &lt;a href=&quot;www.baidu.com&quot;&gt;article&lt;/a&gt; 使用 tab 键即可缩进。当用到大片的代码的时候需要使用tab加四个空格 ####示例 &lt;html&gt; &lt;table border=&quot;1&quot; cellpadding=&quot;10&quot;&gt; &lt;tr&gt; &lt;td&gt;row1 cell1&lt;/td&gt; &lt;td&gt;row1 cell2&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&amp;nbsp&lt;/td&gt; &lt;td&gt;row2 cell2&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;/table&gt; &lt;/html&gt; ###分割线分割线的语法只需要三个 * 号，例如： 到这里，Markdown 的基本语法在日常的使用中基本就没什么大问题了，只要多加练习，配合好用的工具，写起东西来肯定会行云流水。更多的语法规则，其实 Mou 的 Help 文档栗子很好，当你第一次使用 Mou 时，就会显示该文档。可以用来对用的查找和学习。 ###引用当我写一段话的时候我先在底部标注一下［1］的链接是什么意思的时候，再次撰写的时候就可以直接在需要链接的部分添加［1］即可：演示如下：这是链接百度 这是谷歌]]></content>
  </entry>
  <entry>
    <title><![CDATA[my first blog]]></title>
    <url>%2F2017%2F09%2F04%2Fmy-first-blog%2Findex%2F</url>
    <content type="text"><![CDATA[#This is my first blog. #这是搭建好的]]></content>
      <tags>
        <tag>test</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2017%2F09%2F04%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
